import React from 'react';
import type { Label, ThumbSize } from './types';
export declare const calculateClickValue: (event: React.MouseEvent, container: HTMLDivElement, min: number, max: number, step: number, vertical: boolean, rtl: boolean) => number;
export declare const calculateMoveValue: (event: MouseEvent, container: HTMLDivElement, min: number, max: number, step: number, vertical: boolean, rtl: boolean) => number;
export declare const calculateVerticalPosition: (mouseY: number, rect: DOMRect) => number | "max" | "min";
export declare const calculateHorizontalPosition: (mouseX: number, rect: DOMRect, rtl: boolean) => number | "max" | "min";
export declare const calculateLabelPosition: (min: number, max: number, labels: Label[], label: Label, index: number) => string;
export declare const calculateTooltipPosition: (min: number, max: number, value: number, thumbSize: ThumbSize, vertical: boolean, rtl: boolean) => {
    bottom: string;
    marginBottom: string;
    right?: undefined;
    marginRight?: undefined;
    left?: undefined;
    marginLeft?: undefined;
} | {
    right: string;
    marginRight: string;
    bottom?: undefined;
    marginBottom?: undefined;
    left?: undefined;
    marginLeft?: undefined;
} | {
    left: string;
    marginLeft: string;
    bottom?: undefined;
    marginBottom?: undefined;
    right?: undefined;
    marginRight?: undefined;
};
export declare const getClickPosition: (event: React.MouseEvent, container: HTMLDivElement, vertical: boolean, rtl: boolean) => number;
export declare const getLabelValue: (min: number, max: number, labels: Label[], label: Label, index: number) => number;
export declare const getNearestValueIndex: (value: number, values: number[]) => number;
export declare const getThumbSize: (element: HTMLDivElement, vertical: boolean) => ThumbSize | null;
export declare const roundToStep: (number: number, step: number) => number;
export declare const updateGradient: (min: number, max: number, values: number[], vertical: boolean, rtl: boolean) => {
    backgroundImage: string;
};
export declare const updateValue: (value: number, values: number[], distance: number, index: number) => number[];
export declare const validateValue: (value: number, values: number[], distance: number, index: number) => number;
