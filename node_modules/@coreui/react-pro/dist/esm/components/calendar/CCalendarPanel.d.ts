import React, { KeyboardEvent } from 'react';
import type { DisabledDate, SelectionTypes, ViewTypes } from './types';
export interface CCalendarPanelProps {
    calendarDate: Date;
    dayFormat?: 'numeric' | '2-digit' | ((date: Date) => string | number);
    disabledDates?: DisabledDate | DisabledDate[];
    endDate: Date | null;
    firstDayOfWeek: number;
    hoverDate: Date | null;
    locale: string;
    maxDate: Date | null;
    minDate: Date | null;
    onCalendarClick: (date: Date) => void;
    onCalendarKeyDown: (event: KeyboardEvent<HTMLDivElement>, date: Date) => void;
    onCalendarMouseEnter: (date: Date) => void;
    onCalendarMouseLeave: () => void;
    order: number;
    selectAdjacementDays: boolean;
    selectEndDate: boolean | undefined;
    selectionType: SelectionTypes;
    showAdjacementDays: boolean;
    showWeekNumber: boolean;
    startDate: Date | null;
    view: ViewTypes;
    weekdayFormat: number | 'long' | 'narrow' | 'short' | ((date: Date) => string | number);
    weekNumbersLabel: string | undefined;
}
export declare const CCalendarPanel: React.ForwardRefExoticComponent<CCalendarPanelProps & React.RefAttributes<HTMLTableElement>>;
