import { useRef, useCallback } from 'react';

var useDebouncedCallback = function (callback, delay) {
    var timeout = useRef();
    return useCallback(function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var handler = function () {
            clearTimeout(timeout.current);
            callback.apply(void 0, args);
        };
        clearTimeout(timeout.current);
        timeout.current = setTimeout(handler, delay);
    }, [callback, delay]);
};

export { useDebouncedCallback };
//# sourceMappingURL=useDebouncedCallback.js.map
